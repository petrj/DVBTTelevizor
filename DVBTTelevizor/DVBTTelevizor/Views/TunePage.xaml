<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Class="DVBTTelevizor.TunePage"
             Title="Tuning">

    <ContentPage.Resources>
        <ResourceDictionary>

            <Style x:Key="InfoLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="#41b3ff"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="HorizontalTextAlignment" Value="Center"/>
                <Setter Property="BackgroundColor" Value="#262626"/>
            </Style>

            <Style x:Key="ListViewStyle" TargetType="ListView">
                <Setter Property="HasUnevenRows" Value="True"/>
                <Setter Property="IsPullToRefreshEnabled" Value="False"/>
                <Setter Property="BackgroundColor" Value="Black"/>
            </Style>

            <Style x:Key="ChannelNumberTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
                <Setter Property="HorizontalTextAlignment" Value="Start"/>
                <Setter Property="Margin" Value="5,0,5,0"/>
            </Style>

            <Style x:Key="ChannelNameTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="#41b3ff"/>
                <Setter Property="Margin" Value="0,5,5,5"/>
                <Setter Property="VerticalTextAlignment" Value="Start"/>
                <Setter Property="HorizontalTextAlignment" Value="Start"/>
                <Setter Property="LineBreakMode" Value="NoWrap"/>
            </Style>

            <Style x:Key="ProviderNameTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="#41b3ff"/>
                <Setter Property="FontAttributes" Value="Italic"/>
                <Setter Property="Margin" Value="0,0,5,0"/>
                <Setter Property="VerticalTextAlignment" Value="End"/>
                <Setter Property="HorizontalTextAlignment" Value="End"/>
                <Setter Property="LineBreakMode" Value="NoWrap"/>
            </Style>

            <Style x:Key="DetailLabelsTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="LightGray"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
                <Setter Property="HorizontalTextAlignment" Value="Start"/>
                <Setter Property="Margin" Value="10,0,5,0"/>
            </Style>

            <Style x:Key="ButtonStyle" TargetType="Label">
                <Setter Property="Margin" Value="0,0,0,0"/>
            </Style>

            <Style x:Key="CaptionStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
                <Setter Property="HorizontalTextAlignment" Value="Start"/>
                <Setter Property="LineBreakMode" Value="NoWrap"/>
            </Style>

            <Style x:Key="LabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
                <Setter Property="HorizontalTextAlignment" Value="Start"/>
            </Style>

            <Style x:Key="EntryStyle" TargetType="Entry">
                <Setter Property="TextColor" Value="Yellow"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
                <Setter Property="HorizontalTextAlignment" Value="Start"/>
                <Setter Property="Keyboard" Value="Numeric"/>
            </Style>

            <Style x:Key="PickerStyle" TargetType="Picker">
                <Setter Property="TextColor" Value="Yellow"/>
                <Setter Property="BackgroundColor" Value="Black"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="HorizontalTextAlignment" Value="Right"/>
            </Style>

            <Style x:Key="IconStyle" TargetType="Image">
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="Margin" Value="0,0,5,0"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="HorizontalOptions" Value="End"/>
                <Setter Property="Margin" Value="0,0,5,0"/>
            </Style>

        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>

        <!--ScrollView x:Name="TuneScrollView" Margin="0,0,0,0"-->

            <StackLayout VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">

                <!-- top controls -->
                <StackLayout VerticalOptions="StartAndExpand" Margin="10,0,10,0">

                    <StackLayout VerticalOptions="StartAndExpand" Spacing="0">

                    <Grid VerticalOptions="Start" IsVisible="{Binding TuneReady}" Margin="0,20,0,0" RowSpacing="0">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <BoxView x:Name="AutoManualTuningBoxView" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" BackgroundColor="Transparent"/>

                        <Label Grid.Row="0" Grid.Column="0" Text="Tuning mode" Style="{DynamicResource CaptionStyle}" FontSize="{Binding FontSizeForLabel}"/>
                        <Picker
                            Grid.Row="0" Grid.Column="1"
                            x:Name="AutoManualPicker"
                            Margin="20,0,0,0"
                            FontSize="{Binding FontSizeForPicker}"
                            Style="{StaticResource PickerStyle}"
                            SelectedIndex="{Binding TuneModeIndex, Mode=TwoWay}">
                            <Picker.Items>
                                <x:String>Automatic</x:String>
                                <x:String>Manual</x:String>
                            </Picker.Items>
                        </Picker>
                    </Grid>

                    <Grid x:Name="BandWidthGrid" IsVisible="True" RowSpacing="0" Margin="0,10,0,0">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20*" />
                            <ColumnDefinition Width="60*" />
                            <ColumnDefinition Width="20*" />
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Text="BandWidth" Style="{DynamicResource CaptionStyle}" FontSize="{Binding FontSizeForLabel}" HorizontalOptions="Start"/>
                        <Label Grid.Row="1" Grid.Column="1" Text="{Binding TuningFrequencyBandWidthMHz}" Style="{DynamicResource CaptionStyle}" FontSize="{Binding FontSizeForLabel}" HorizontalOptions="Center"/>
                        <Button Grid.Row="2" Grid.Column="1" x:Name="EditBandWidthButton" Text="Edit" FontSize="{Binding FontSizeForLabel}" HorizontalOptions="Center"/>
                    </Grid>

                    <Grid x:Name="FrequenciesGrid" IsVisible="True" RowSpacing="0" Margin="0,10,0,0">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="45*" />
                            <ColumnDefinition Width="10*" />
                            <ColumnDefinition Width="45*" />
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Text="Frequency" Style="{DynamicResource CaptionStyle}" FontSize="{Binding FontSizeForLabel}"/>

                        <Label Grid.Row="1" Grid.Column="0" Text="From" Style="{DynamicResource CaptionStyle}" FontSize="{Binding FontSizeForLabel}" HorizontalOptions="End" />
                        <Label Grid.Row="1" Grid.Column="2" Text="To" Style="{DynamicResource CaptionStyle}" FontSize="{Binding FontSizeForLabel}" HorizontalOptions="Start" />

                        <Label Grid.Row="2" Grid.Column="0"  Text="{Binding AutoTuningFrequencyFromMHzCaption}" Style="{DynamicResource CaptionStyle}" FontSize="{Binding FontSizeForLabel}" HorizontalOptions="End" />
                        <Label Grid.Row="2" Grid.Column="1" Text="-" Style="{DynamicResource CaptionStyle}" FontSize="{Binding FontSizeForLabel}" HorizontalOptions="Center"/>
                        <Label Grid.Row="2" Grid.Column="2" Text="{Binding AutoTuningFrequencyToMHzCaption}" Style="{DynamicResource CaptionStyle}" FontSize="{Binding FontSizeForLabel}" HorizontalOptions="Start" />

                        <Button Grid.Row="3" Grid.Column="0" x:Name="EditFrequencyFromButton" Text="Edit" FontSize="{Binding FontSizeForLabel}" HorizontalOptions="End"  Clicked="EditFrequencyFromButtton_Clicked"/>
                        <Button Grid.Row="3" Grid.Column="2" x:Name="EditFrequencyToButton"   Text="Edit" FontSize="{Binding FontSizeForLabel}" HorizontalOptions="Start"  Clicked="EditFrequencyToButtton_Clicked"/>
                    </Grid>

                    <Grid x:Name="DeliverySystemOptionsGrid" IsVisible="{Binding TuneOptionsVisible}" VerticalOptions="StartAndExpand" RowSpacing="0"  Margin="0,0,0,0">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70*" />
                                <ColumnDefinition Width="30*" />
                            </Grid.ColumnDefinitions>

                            <BoxView x:Name="DVBTBoxView" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" BackgroundColor="Transparent"/>

                            <Label Grid.Row="0" Grid.Column="0" Text="DVBT" Style="{DynamicResource CaptionStyle}"  FontSize="{Binding FontSizeForLabel}"/>
                            <Switch Grid.Row="0" Grid.Column="1" x:Name="DVBTTuningCheckBox" IsToggled="{Binding DVBTTuning}"  HorizontalOptions="End"  />

                            <BoxView x:Name="DVBT2BoxView" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" BackgroundColor="Transparent"/>

                            <Label Grid.Row="1" Grid.Column="0" Text="DVBT2" Style="{DynamicResource CaptionStyle}" FontSize="{Binding FontSizeForLabel}"/>
                            <Switch Grid.Row="1" Grid.Column="1" x:Name="DVBT2TuningCheckBox" IsToggled="{Binding DVBT2Tuning}" HorizontalOptions="End"  />
                        </Grid>

                    </StackLayout>

                    <Button  x:Name="TuneButton" Text="Tune" Command="{Binding TuneCommand}" IsVisible="{Binding TuneReady}" Style="{DynamicResource ButtonStyle}"  BackgroundColor="LightGray" TextColor="Black" FontSize="{Binding FontSizeForLabel}" />

                </StackLayout>

                <!-- middle controls -->
                <StackLayout VerticalOptions="CenterAndExpand" Margin="0,0,0,0">

                    <ListView x:Name="ChannelsListView"
                        ItemsSource="{Binding TunedChannels}"
                        CachingStrategy="RecycleElement"
                        HasUnevenRows="True"
                        Style="{StaticResource ListViewStyle}"
                        VerticalOptions="StartAndExpand"
                        SelectedItem="{Binding SelectedChannel, Mode=TwoWay}">

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ViewCell>
                                    <ViewCell.View>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="1" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="12*" />
                                                <ColumnDefinition Width="78*" />
                                                <ColumnDefinition Width="10*" />
                                            </Grid.ColumnDefinitions>

                                            <Label Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Text="{Binding Number}" Style="{DynamicResource ChannelNumberTextStyle}" FontSize="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.FontSizeForChannelNumber}"/>

                                            <Label Grid.Row="0" Grid.Column="1" Text="{Binding Name}" Style="{DynamicResource ChannelNameTextStyle}" FontSize="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.FontSizeForCaption}" />

                                            <Image Grid.Row="0" Grid.Column="2" Source="{Binding Icon}" Style="{DynamicResource IconStyle}" HeightRequest="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.ImageIconSize}"  />

                                            <Label Grid.Row="1" Grid.Column="1" Text="{Binding ServiceTypelWithChannelLabel}" Style="{DynamicResource DetailLabelsTextStyle}" FontSize="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.FontSizeForDetailNote}" />
                                            <Label Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding ProviderName}" Style="{DynamicResource ProviderNameTextStyle}" FontSize="{Binding Source={x:Reference ChannelsListView}, Path=BindingContext.FontSizeForDetailNote}"/>

                                            <BoxView Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" BackgroundColor="White"/>
                                        </Grid>

                                    </ViewCell.View>

                                </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackLayout>

                <!-- bottom controls -->
                <StackLayout VerticalOptions="End" Spacing="0" Margin="0,0,0,0">


                    <!-- delimiter -->
                    <Grid VerticalOptions="Start" IsVisible="{Binding TuningInProgress}" Margin="0,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100*" />
                        </Grid.ColumnDefinitions>
                        <BoxView Grid.Row="0" Grid.Column="0" BackgroundColor="Black" HeightRequest="10" VerticalOptions="FillAndExpand"  Margin="0,0,0,0"/>
                    </Grid>

                    <Label IsVisible="{Binding TuningInProgress}" Text="{Binding TuningLabel}" HorizontalOptions="Center" VerticalOptions="Start" TextColor="White" FontSize="{Binding FontSizeForLabel}"/>

                    <StackLayout IsVisible="{Binding AutomaticTuningInProgress}" Margin="0,0,0,0">
                        <ProgressBar Progress="{Binding AutomaticTuningProgress}" BackgroundColor="Black" ProgressColor="Blue" HorizontalOptions="Fill" VerticalOptions="Start" Margin="0,5,0,0" HeightRequest="10" />
                    </StackLayout>


                    <StackLayout IsVisible="{Binding TuningInProgress}" Margin="0,5,0,0">
                        <Label Text="Signal strength" HorizontalOptions="Center" TextColor="White" FontSize="{Binding FontSizeForLabel}"/>
                        <ProgressBar Progress="{Binding SignalStrengthProgress}" HorizontalOptions="Fill" BackgroundColor="Black" ProgressColor="Blue" VerticalOptions="Start" Margin="0,5,0,0" HeightRequest="10" />
                    </StackLayout>

                    <Grid Margin="10,10,10,10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="50*" />
                        </Grid.ColumnDefinitions>

                        <Button Grid.Row="0" Grid.Column="0" x:Name="AbortTuneButton" Text="Abort" Command="{Binding AbortTuneCommand}" IsVisible="{Binding AbortedButtonVisible}" FontSize="{Binding FontSizeForLabel}"/>
                        <ActivityIndicator Grid.Row="0" Grid.Column="1" IsVisible="{Binding TuningInProgress}" IsRunning="{Binding TuningInProgress}" IsEnabled="True"/>

                        <Button Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" x:Name="FinishButton" Command="{Binding FinishTunedCommand}" Text="Done" IsVisible="{Binding TuningFinished}" FontSize="{Binding FontSizeForLabel}"/>
                    </Grid>
                </StackLayout>

            </StackLayout>

        <!--/ScrollView-->

    </ContentPage.Content>

    <ContentPage.ToolbarItems>
        <ToolbarItem Name="ToolConnect" Text="Connect/Disiconnect" Clicked="ToolConnect_Clicked" Icon="{Binding DriverConnectedIcon}" />
    </ContentPage.ToolbarItems>

</ContentPage>